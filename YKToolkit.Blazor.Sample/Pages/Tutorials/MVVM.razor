@page "/Tutorials/MVVM"
@inherits HighlightView

<SidebarMenuItems CurrentPage="MVVM" />

<div class="col-9">
<h3>Model-View-ViewModel Pattern</h3>
<p>データやアプリのロジカルな根幹を担う Model、ユーザが触れる UI 部分を担う View、UI 操作のロジカルな部分を担う ViewModel というように、役割によってアプリケーションの内部構造を細分化し、責務を明確に切り分けるソフトウェアアーキテクチャのひとつが MVVM パターンです。このような切り分けをおこなうことで、View は ViewModel にのみ依存し、ViewModel は Model にのみ依存するという明確な関係が成り立ちます。</p>
<p>YKToolkit.Blazor ではこのような MVVM パターンで Blazor アプリケーションの開発をスムーズにおこなうために用意されたクラスライブラリです。WPF で使用されていた INotifyPropertyChanged インターフェースや ICommand インターフェースを再利用することで、デスクトップアプリケーション開発経験のある方にとって Blazor アプリケーション開発の敷居を低くすることを目的として作られています。</p>
</div>

@code {

}
